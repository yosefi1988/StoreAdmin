@model WebApplicationStoreAdmin.Models.SD_ShoppingBasketObjects

@{
    ViewBag.Title = "Create";
}
en ok
<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Shopping Basket's Objects</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ShoppingBasketID, "Shopping Basket", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @*v1*@
                @*@Html.DropDownList("ShoppingBasketID", null, htmlAttributes: new { @class = "form-control" })*@

                @*v2*@
                @Html.DropDownList("ShoppingBasketID", (SelectList)ViewBag.ShoppingBasketForDDL, htmlAttributes: new { @class = "form-control" })


                @Html.ValidationMessageFor(model => model.ShoppingBasketID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductChargePropertiesID, "Charge Product's Properties", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @*v1*@
                @*@Html.DropDownList("ProductChargePropertiesID", null, htmlAttributes: new { @class = "form-control" })*@

                @*v2*@
                @Html.DropDownList("ProductChargePropertiesID", (SelectList)ViewBag.ProductChargePropertiesDDL, htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.ProductChargePropertiesID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OldPrice, "Old Price", htmlAttributes: new { @class = "control-label col-md-2" })


            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddDate, "Add Date", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.AddDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
